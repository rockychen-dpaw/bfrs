# Generated by Django 2.2.6 on 2019-11-25 02:30

import bfrs.models
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_mvc.models
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Agency Name')),
                ('code', models.CharField(max_length=10, verbose_name='Agency Short Code')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Bushfire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Fire Name')),
                ('year', models.PositiveSmallIntegerField(default=bfrs.models.current_finyear, verbose_name='Financial Year')),
                ('reporting_year', models.PositiveSmallIntegerField(blank=True, default=bfrs.models.current_finyear, verbose_name='Reporting Year')),
                ('prob_fire_level', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3)], null=True, verbose_name='Probable fire level')),
                ('max_fire_level', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3)], null=True, verbose_name='Maximum fire level')),
                ('media_alert_req', models.NullBooleanField(verbose_name='Media Alert Required')),
                ('park_trail_impacted', models.NullBooleanField(verbose_name='Park and/or trail potentially impacted')),
                ('cause_state', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Known'), (2, 'Possible')], null=True, verbose_name='Fire Cause State (Known/Possible)')),
                ('other_cause', models.CharField(blank=True, max_length=64, null=True, verbose_name='Other Fire Cause')),
                ('prescribed_burn_id', models.CharField(blank=True, max_length=7, null=True, verbose_name='Prescribed Burn ID')),
                ('dfes_incident_no', models.CharField(blank=True, max_length=32, null=True, verbose_name='DFES Fire Number')),
                ('job_code', models.CharField(blank=True, max_length=12, null=True, verbose_name='Job Code')),
                ('fire_position', models.CharField(blank=True, max_length=100, null=True, verbose_name='Position of Fire')),
                ('fire_position_override', models.BooleanField(default=False, verbose_name='SSS override')),
                ('origin_point', django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name='Point of Origin')),
                ('origin_point_mga', models.CharField(blank=True, max_length=64, null=True, verbose_name='Point of Origin (MGA)')),
                ('origin_point_grid', models.CharField(blank=True, max_length=16, null=True, verbose_name='Point of Origin (GRID)')),
                ('fire_boundary', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, help_text='Optional.', null=True, srid=4326)),
                ('fire_not_found', models.BooleanField(default=False)),
                ('fire_monitored_only', models.BooleanField(default=False)),
                ('final_fire_boundary', models.BooleanField(default=False)),
                ('fb_validation_req', models.NullBooleanField(verbose_name='Fire Boundary Validation Required?')),
                ('other_info', models.CharField(blank=True, max_length=250, null=True, verbose_name='Other Information')),
                ('other_field_officer', models.CharField(blank=True, max_length=75, null=True, verbose_name='Other Field Officer Name')),
                ('other_field_officer_agency', models.CharField(blank=True, max_length=36, null=True, verbose_name='Other Field Officer Agency')),
                ('other_field_officer_phone', models.CharField(blank=True, max_length=24, null=True, verbose_name='Other Field Officer Phone')),
                ('init_authorised_date', models.DateTimeField(blank=True, null=True, verbose_name='Initial Authorised Date')),
                ('dispatch_pw', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Yes'), (2, 'No')], null=True, verbose_name='P&W Resource dispatched')),
                ('dispatch_aerial', models.NullBooleanField(verbose_name='Aerial support requested')),
                ('dispatch_pw_date', models.DateTimeField(blank=True, null=True, verbose_name='P&W Resource dispatch date')),
                ('dispatch_aerial_date', models.DateTimeField(blank=True, null=True, verbose_name='Aerial support request date')),
                ('fire_detected_date', models.DateTimeField(blank=True, null=True, verbose_name='Date and time fire detected')),
                ('fire_contained_date', models.DateTimeField(blank=True, null=True, verbose_name='Date fire Contained')),
                ('fire_controlled_date', models.DateTimeField(blank=True, null=True, verbose_name='Date fire Controlled')),
                ('fire_safe_date', models.DateTimeField(blank=True, null=True, verbose_name='Date fire inactive')),
                ('other_first_attack', models.CharField(blank=True, max_length=50, null=True, verbose_name='Other Initial Attack Agency')),
                ('other_initial_control', models.CharField(blank=True, max_length=50, null=True, verbose_name='Other Initial Control Agency')),
                ('other_final_control', models.CharField(blank=True, max_length=50, null=True, verbose_name='Other Final Control Agency')),
                ('arson_squad_notified', models.NullBooleanField(verbose_name='Arson Squad Notified')),
                ('investigation_req', models.NullBooleanField(verbose_name='Investigation Required')),
                ('offence_no', models.CharField(blank=True, max_length=15, null=True, verbose_name='Police Offence No.')),
                ('initial_area', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Area of fire at arrival (ha)')),
                ('initial_area_unknown', models.BooleanField(default=False)),
                ('area', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Final Fire Area (ha)')),
                ('area_limit', models.BooleanField(default=False, verbose_name='Area < 2ha')),
                ('other_area', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Other Area (ha)')),
                ('damage_unknown', models.BooleanField(default=False, verbose_name='Damages to report?')),
                ('injury_unknown', models.BooleanField(default=False, verbose_name='Injuries to report?')),
                ('authorised_date', models.DateTimeField(blank=True, null=True, verbose_name='Authorised Date')),
                ('reviewed_date', models.DateTimeField(blank=True, null=True, verbose_name='Reviewed Date')),
                ('report_status', models.PositiveSmallIntegerField(choices=[(1, 'Initial Fire Report'), (2, 'Notifications Submitted'), (3, 'Report Authorised'), (4, 'Reviewed'), (5, 'Invalidated'), (6, 'Outstanding Fires'), (100, 'Merged'), (101, 'Duplicated')], default=1, editable=False)),
                ('sss_data', models.TextField(blank=True, null=True, verbose_name='SSS REST Api Dict')),
                ('archive', models.BooleanField(default=False, verbose_name='Archive report')),
                ('invalid_details', models.CharField(blank=True, max_length=64, null=True, verbose_name='Reason for invalidating')),
                ('fireboundary_uploaded_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Date fireboundary uploaded')),
                ('other_capturemethod', models.CharField(blank=True, max_length=128, null=True, verbose_name='Other Capture Methdod')),
                ('fire_number', models.CharField(max_length=15, unique=True, verbose_name='Fire Number')),
                ('sss_id', models.CharField(blank=True, max_length=64, null=True, unique=True, verbose_name='Unique SSS ID')),
                ('authorised_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bushfire_authorised_by', to=settings.AUTH_USER_MODEL, verbose_name='Authorised By')),
            ],
            options={
                'permissions': (('final_authorise_bushfire', 'Can final authorise bushfire'),),
            },
            bases=(models.Model, django_mvc.models.DictMixin),
        ),
        migrations.CreateModel(
            name='CaptureMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=32, unique=True)),
                ('desc', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Cause',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('report_name', models.CharField(default='', max_length=50)),
                ('report_order', models.PositiveSmallIntegerField(default=1, verbose_name='order in annual report')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='DamageType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Damage Type')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('code', models.CharField(max_length=3)),
                ('archive_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DocumentCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Document Category')),
                ('archived', models.BooleanField(default=False)),
                ('archivedon', models.DateTimeField(editable=False, null=True, verbose_name='Archived on')),
                ('archivedby', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Archived By')),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bfrs_documentcategory_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bfrs_documentcategory_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
            bases=(django_mvc.models.DictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FuelType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='InjuryType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Injury/Fatality Type')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('forest_region', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tenure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Tenure category')),
                ('report_name', models.CharField(default='', max_length=200, verbose_name='Tenure category report name')),
                ('report_group', models.CharField(default='', max_length=32, verbose_name='Tenure category report group')),
                ('report_order', models.PositiveSmallIntegerField(default=1, verbose_name='order in annual report')),
                ('report_group_order', models.PositiveSmallIntegerField(default=1, verbose_name='group order in annual report')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TenureMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Tenure sub category')),
                ('tenure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bfrs.Tenure')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='region', chained_model_field='region', null=True, on_delete=django.db.models.deletion.PROTECT, to='bfrs.District')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='bfrs.Region')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, verbose_name='Document Tag')),
                ('archived', models.BooleanField(default=False)),
                ('archivedon', models.DateTimeField(editable=False, null=True, verbose_name='Archived on')),
                ('archivedby', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Archived By')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bfrs.DocumentCategory')),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bfrs_documenttag_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bfrs_documenttag_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('category', 'name')},
                'ordering': ['name'],
            },
            bases=(django_mvc.models.DictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('custom_tag', models.CharField(blank=True, max_length=64, null=True, verbose_name='Custom Descriptor')),
                ('document', models.FileField(upload_to=bfrs.models.document_path, verbose_name='Document')),
                ('document_created', models.DateTimeField(verbose_name='Created on')),
                ('archived', models.BooleanField(default=False)),
                ('archivedon', models.DateTimeField(editable=False, null=True, verbose_name='Archived on')),
                ('archivedby', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Archived By')),
                ('bushfire', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='bfrs.Bushfire', verbose_name='Bushfire')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bfrs.DocumentCategory', verbose_name='Document Category')),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bfrs_document_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bfrs_document_modified', to=settings.AUTH_USER_MODEL)),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bfrs.DocumentTag', verbose_name='Document Tag')),
                ('upload_bushfire', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='uploaded_documents', to='bfrs.Bushfire', verbose_name='Upload Bushfire')),
            ],
            bases=(django_mvc.models.DictMixin, models.Model),
        ),
        migrations.AddField(
            model_name='district',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bfrs.Region'),
        ),
        migrations.CreateModel(
            name='BushfireSnapshot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Fire Name')),
                ('year', models.PositiveSmallIntegerField(default=bfrs.models.current_finyear, verbose_name='Financial Year')),
                ('reporting_year', models.PositiveSmallIntegerField(blank=True, default=bfrs.models.current_finyear, verbose_name='Reporting Year')),
                ('prob_fire_level', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3)], null=True, verbose_name='Probable fire level')),
                ('max_fire_level', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3)], null=True, verbose_name='Maximum fire level')),
                ('media_alert_req', models.NullBooleanField(verbose_name='Media Alert Required')),
                ('park_trail_impacted', models.NullBooleanField(verbose_name='Park and/or trail potentially impacted')),
                ('cause_state', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Known'), (2, 'Possible')], null=True, verbose_name='Fire Cause State (Known/Possible)')),
                ('other_cause', models.CharField(blank=True, max_length=64, null=True, verbose_name='Other Fire Cause')),
                ('prescribed_burn_id', models.CharField(blank=True, max_length=7, null=True, verbose_name='Prescribed Burn ID')),
                ('dfes_incident_no', models.CharField(blank=True, max_length=32, null=True, verbose_name='DFES Fire Number')),
                ('job_code', models.CharField(blank=True, max_length=12, null=True, verbose_name='Job Code')),
                ('fire_position', models.CharField(blank=True, max_length=100, null=True, verbose_name='Position of Fire')),
                ('fire_position_override', models.BooleanField(default=False, verbose_name='SSS override')),
                ('origin_point', django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name='Point of Origin')),
                ('origin_point_mga', models.CharField(blank=True, max_length=64, null=True, verbose_name='Point of Origin (MGA)')),
                ('origin_point_grid', models.CharField(blank=True, max_length=16, null=True, verbose_name='Point of Origin (GRID)')),
                ('fire_boundary', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, help_text='Optional.', null=True, srid=4326)),
                ('fire_not_found', models.BooleanField(default=False)),
                ('fire_monitored_only', models.BooleanField(default=False)),
                ('final_fire_boundary', models.BooleanField(default=False)),
                ('fb_validation_req', models.NullBooleanField(verbose_name='Fire Boundary Validation Required?')),
                ('other_info', models.CharField(blank=True, max_length=250, null=True, verbose_name='Other Information')),
                ('other_field_officer', models.CharField(blank=True, max_length=75, null=True, verbose_name='Other Field Officer Name')),
                ('other_field_officer_agency', models.CharField(blank=True, max_length=36, null=True, verbose_name='Other Field Officer Agency')),
                ('other_field_officer_phone', models.CharField(blank=True, max_length=24, null=True, verbose_name='Other Field Officer Phone')),
                ('init_authorised_date', models.DateTimeField(blank=True, null=True, verbose_name='Initial Authorised Date')),
                ('dispatch_pw', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Yes'), (2, 'No')], null=True, verbose_name='P&W Resource dispatched')),
                ('dispatch_aerial', models.NullBooleanField(verbose_name='Aerial support requested')),
                ('dispatch_pw_date', models.DateTimeField(blank=True, null=True, verbose_name='P&W Resource dispatch date')),
                ('dispatch_aerial_date', models.DateTimeField(blank=True, null=True, verbose_name='Aerial support request date')),
                ('fire_detected_date', models.DateTimeField(blank=True, null=True, verbose_name='Date and time fire detected')),
                ('fire_contained_date', models.DateTimeField(blank=True, null=True, verbose_name='Date fire Contained')),
                ('fire_controlled_date', models.DateTimeField(blank=True, null=True, verbose_name='Date fire Controlled')),
                ('fire_safe_date', models.DateTimeField(blank=True, null=True, verbose_name='Date fire inactive')),
                ('other_first_attack', models.CharField(blank=True, max_length=50, null=True, verbose_name='Other Initial Attack Agency')),
                ('other_initial_control', models.CharField(blank=True, max_length=50, null=True, verbose_name='Other Initial Control Agency')),
                ('other_final_control', models.CharField(blank=True, max_length=50, null=True, verbose_name='Other Final Control Agency')),
                ('arson_squad_notified', models.NullBooleanField(verbose_name='Arson Squad Notified')),
                ('investigation_req', models.NullBooleanField(verbose_name='Investigation Required')),
                ('offence_no', models.CharField(blank=True, max_length=15, null=True, verbose_name='Police Offence No.')),
                ('initial_area', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Area of fire at arrival (ha)')),
                ('initial_area_unknown', models.BooleanField(default=False)),
                ('area', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Final Fire Area (ha)')),
                ('area_limit', models.BooleanField(default=False, verbose_name='Area < 2ha')),
                ('other_area', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Other Area (ha)')),
                ('damage_unknown', models.BooleanField(default=False, verbose_name='Damages to report?')),
                ('injury_unknown', models.BooleanField(default=False, verbose_name='Injuries to report?')),
                ('authorised_date', models.DateTimeField(blank=True, null=True, verbose_name='Authorised Date')),
                ('reviewed_date', models.DateTimeField(blank=True, null=True, verbose_name='Reviewed Date')),
                ('report_status', models.PositiveSmallIntegerField(choices=[(1, 'Initial Fire Report'), (2, 'Notifications Submitted'), (3, 'Report Authorised'), (4, 'Reviewed'), (5, 'Invalidated'), (6, 'Outstanding Fires'), (100, 'Merged'), (101, 'Duplicated')], default=1, editable=False)),
                ('sss_data', models.TextField(blank=True, null=True, verbose_name='SSS REST Api Dict')),
                ('archive', models.BooleanField(default=False, verbose_name='Archive report')),
                ('invalid_details', models.CharField(blank=True, max_length=64, null=True, verbose_name='Reason for invalidating')),
                ('fireboundary_uploaded_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Date fireboundary uploaded')),
                ('other_capturemethod', models.CharField(blank=True, max_length=128, null=True, verbose_name='Other Capture Methdod')),
                ('fire_number', models.CharField(max_length=15, verbose_name='Fire Number')),
                ('sss_id', models.CharField(blank=True, max_length=64, null=True, verbose_name='Unique SSS ID')),
                ('snapshot_type', models.PositiveSmallIntegerField(choices=[(1, 'Initial'), (2, 'Final')])),
                ('action', models.CharField(max_length=100, verbose_name='Action Type')),
                ('authorised_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bushfiresnapshot_authorised_by', to=settings.AUTH_USER_MODEL, verbose_name='Authorised By')),
                ('bushfire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snapshots', to='bfrs.Bushfire')),
                ('capturemethod', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='bfrs.CaptureMethod')),
                ('cause', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='bfrs.Cause', verbose_name='Fire Cause')),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bfrs_bushfiresnapshot_created', to=settings.AUTH_USER_MODEL)),
                ('district', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='region', chained_model_field='region', on_delete=django.db.models.deletion.PROTECT, to='bfrs.District', verbose_name='District')),
                ('duty_officer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bushfiresnapshot_init_duty_officer', to=settings.AUTH_USER_MODEL, verbose_name='Duty Officer')),
                ('field_officer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bushfiresnapshot_init_field_officer', to=settings.AUTH_USER_MODEL, verbose_name='Field Officer')),
                ('final_control', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bushfiresnapshot_final_control', to='bfrs.Agency', verbose_name='Final Controlling Agency')),
                ('fireboundary_uploaded_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('first_attack', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bushfiresnapshot_first_attack', to='bfrs.Agency', verbose_name='Initial Attack Agency')),
                ('init_authorised_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bushfiresnapshot_init_authorised_by', to=settings.AUTH_USER_MODEL, verbose_name='Initial Authorised By')),
                ('initial_control', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bushfiresnapshot_initial_control', to='bfrs.Agency', verbose_name='Initial Controlling Agency')),
                ('modifier', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bfrs_bushfiresnapshot_modified', to=settings.AUTH_USER_MODEL)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bfrs.Region', verbose_name='Region')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bushfiresnapshot_reviewed_by', to=settings.AUTH_USER_MODEL, verbose_name='Reviewed By')),
                ('tenure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='bfrs.Tenure', verbose_name='Tenure of Ignition Point')),
                ('valid_bushfire', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bushfiresnapshot_invalidated', to='bfrs.BushfireSnapshot')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, django_mvc.models.DictMixin),
        ),
        migrations.AddField(
            model_name='bushfire',
            name='capturemethod',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='bfrs.CaptureMethod'),
        ),
        migrations.AddField(
            model_name='bushfire',
            name='cause',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='bfrs.Cause', verbose_name='Fire Cause'),
        ),
        migrations.AddField(
            model_name='bushfire',
            name='creator',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bfrs_bushfire_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bushfire',
            name='district',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='region', chained_model_field='region', on_delete=django.db.models.deletion.PROTECT, to='bfrs.District', verbose_name='District'),
        ),
        migrations.AddField(
            model_name='bushfire',
            name='duty_officer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bushfire_init_duty_officer', to=settings.AUTH_USER_MODEL, verbose_name='Duty Officer'),
        ),
        migrations.AddField(
            model_name='bushfire',
            name='field_officer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bushfire_init_field_officer', to=settings.AUTH_USER_MODEL, verbose_name='Field Officer'),
        ),
        migrations.AddField(
            model_name='bushfire',
            name='final_control',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bushfire_final_control', to='bfrs.Agency', verbose_name='Final Controlling Agency'),
        ),
        migrations.AddField(
            model_name='bushfire',
            name='fireboundary_uploaded_by',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bushfire',
            name='first_attack',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bushfire_first_attack', to='bfrs.Agency', verbose_name='Initial Attack Agency'),
        ),
        migrations.AddField(
            model_name='bushfire',
            name='init_authorised_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bushfire_init_authorised_by', to=settings.AUTH_USER_MODEL, verbose_name='Initial Authorised By'),
        ),
        migrations.AddField(
            model_name='bushfire',
            name='initial_control',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bushfire_initial_control', to='bfrs.Agency', verbose_name='Initial Controlling Agency'),
        ),
        migrations.AddField(
            model_name='bushfire',
            name='modifier',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bfrs_bushfire_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bushfire',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bfrs.Region', verbose_name='Region'),
        ),
        migrations.AddField(
            model_name='bushfire',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bushfire_reviewed_by', to=settings.AUTH_USER_MODEL, verbose_name='Reviewed By'),
        ),
        migrations.AddField(
            model_name='bushfire',
            name='tenure',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='bfrs.Tenure', verbose_name='Tenure of Ignition Point'),
        ),
        migrations.AddField(
            model_name='bushfire',
            name='valid_bushfire',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bushfire_invalidated', to='bfrs.Bushfire'),
        ),
        migrations.CreateModel(
            name='InjurySnapshot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('number', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('snapshot_type', models.PositiveSmallIntegerField(choices=[(1, 'Initial'), (2, 'Final')])),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bfrs_injurysnapshot_created', to=settings.AUTH_USER_MODEL)),
                ('injury_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bfrs.InjuryType')),
                ('modifier', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bfrs_injurysnapshot_modified', to=settings.AUTH_USER_MODEL)),
                ('snapshot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='injury_snapshot', to='bfrs.BushfireSnapshot')),
            ],
            options={
                'unique_together': {('injury_type', 'snapshot')},
            },
        ),
        migrations.CreateModel(
            name='Injury',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('bushfire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='injuries', to='bfrs.Bushfire')),
                ('injury_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bfrs.InjuryType')),
            ],
            options={
                'unique_together': {('bushfire', 'injury_type')},
            },
        ),
        migrations.CreateModel(
            name='DamageSnapshot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('number', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('snapshot_type', models.PositiveSmallIntegerField(choices=[(1, 'Initial'), (2, 'Final')])),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bfrs_damagesnapshot_created', to=settings.AUTH_USER_MODEL)),
                ('damage_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bfrs.DamageType')),
                ('modifier', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bfrs_damagesnapshot_modified', to=settings.AUTH_USER_MODEL)),
                ('snapshot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='damage_snapshot', to='bfrs.BushfireSnapshot')),
            ],
            options={
                'unique_together': {('damage_type', 'snapshot')},
            },
        ),
        migrations.CreateModel(
            name='Damage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('bushfire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='damages', to='bfrs.Bushfire')),
                ('damage_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bfrs.DamageType')),
            ],
            options={
                'unique_together': {('bushfire', 'damage_type')},
            },
        ),
        migrations.CreateModel(
            name='BushfirePropertySnapshot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(editable=False, max_length=32, verbose_name='Property Name')),
                ('value', models.TextField(blank=True, null=True, verbose_name='Property Value')),
                ('snapshot_type', models.PositiveSmallIntegerField(choices=[(1, 'Initial'), (2, 'Final')])),
                ('snapshot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties_snapshot', to='bfrs.BushfireSnapshot')),
            ],
            options={
                'unique_together': {('snapshot', 'name')},
            },
        ),
        migrations.CreateModel(
            name='BushfireProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(editable=False, max_length=32, verbose_name='Property Name')),
                ('value', models.TextField(blank=True, null=True, verbose_name='Property Value')),
                ('bushfire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='bfrs.Bushfire')),
            ],
            options={
                'unique_together': {('bushfire', 'name')},
            },
        ),
        migrations.CreateModel(
            name='AreaBurntSnapshot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('area', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Area (ha)')),
                ('snapshot_type', models.PositiveSmallIntegerField(choices=[(1, 'Initial'), (2, 'Final')])),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bfrs_areaburntsnapshot_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bfrs_areaburntsnapshot_modified', to=settings.AUTH_USER_MODEL)),
                ('snapshot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenures_burnt_snapshot', to='bfrs.BushfireSnapshot')),
                ('tenure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='areaburntsnapshot_tenures', to='bfrs.Tenure')),
            ],
            options={
                'unique_together': {('tenure', 'snapshot')},
            },
        ),
        migrations.CreateModel(
            name='AreaBurnt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Area (ha)')),
                ('bushfire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenures_burnt', to='bfrs.Bushfire')),
                ('tenure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='areaburnt_tenures', to='bfrs.Tenure')),
            ],
            options={
                'unique_together': {('bushfire', 'tenure')},
            },
        ),
    ]
